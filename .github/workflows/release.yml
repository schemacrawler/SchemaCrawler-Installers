name: Build and Publish Installers

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - '*'
    tags:
      - 'v*'

jobs:

### DOWNLOAD SCHEMACRAWLER DISTRIBUTION
  download-schemacrawler-distribution:
    name: Download SchemaCrawler distribution
    runs-on: ubuntu-latest
    steps:

# VALIDATE TAGS
    - id: validate-semver
      name: Validate tag against semantic versioning
      if: startsWith(github.ref, 'refs/tags/')
      shell: bash
      run: |
        SEMVER_PATTERN="^refs/tags/v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$"
        if [[ ! $GITHUB_REF =~ $SEMVER_PATTERN ]]
          then
            echo "Tag $GITHUB_REF does not follow semantic versioning"
            exit 1
          fi

# Build SchemaCrawler - BUILD FOR DISTRIBUTION
    - id: obtain-distribution
      name: Obtain distribution
      shell: bash
      run: |
        # Obtain distribution
        wget -N -q \
        https://github.com/schemacrawler/SchemaCrawler/releases/download/v16.26.2/schemacrawler-16.26.2-bin.zip
        test -f schemacrawler-16.26.2-bin.zip && echo "Downloaded binary distribution"
        mkdir ./schemacrawler-lib
        mkdir ./schemacrawler-icons
        unzip schemacrawler-16.26.2-bin.zip
        cp \
          ./schemacrawler-16.26.2-bin/lib/* \
          ./schemacrawler-lib/
        cp \
          ./schemacrawler-16.26.2-bin/logos/* \
          ./schemacrawler-icons/
        ls -lR ./schemacrawler-lib/
        ls -lR ./schemacrawler-icons/

# Build SchemaCrawler - SAVE DISTRIBUTION
    - id: upload-distrib-lib
      name: Upload distribution - lib/ folder
      uses: actions/upload-artifact@v4
      with:
        name: schemacrawler-lib
        path: ./schemacrawler-lib/
        retention-days: 1
    - id: upload-distrib-icons
      name: Upload distribution - icons/ folder
      uses: actions/upload-artifact@v4
      with:
        name: schemacrawler-icons
        path: ./schemacrawler-icons/
        retention-days: 1


### BUILD LINUX INSTALLER
  build-linux-installer:
    name: Build Linux Installer
    runs-on: ubuntu-latest
    needs: [download-schemacrawler-distribution]
    steps:

# Build Linux Installer - SETUP BUILD ENVIRONMENT
    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v4
    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17

# Build Linux Installer - BUILD INSTALLER
    - id: download-distrib-lib
      name: Download distribution
      uses: actions/download-artifact@v4
    - id: build-installer
      name: Build installer
      shell: bash
      run: |
        # Build installer
        mkdir ./schemacrawler-installers
        jpackage --verbose "@jpackage.cfg" "@jpackage-linux.cfg"
        mv \
          ./schemacrawler-installers/schemacrawler_16.26.2-1_amd64.deb \
          ./schemacrawler-installers/schemacrawler-16.26.2.deb
        sha256sum -b \
          ./schemacrawler-installers/schemacrawler-16.26.2.deb \
          > ./schemacrawler-installers/schemacrawler-16.26.2.deb.SHA256
        ls -l ./schemacrawler-installers

# Build Linux Installer - SAVE INSTALLER
    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        name: linux-installer
        path: ./schemacrawler-installers/*
        retention-days: 1


### BUILD WINDOWS INSTALLER
  build-windows-installer:
    name: Build Windows Installer
    runs-on: windows-latest
    needs: [download-schemacrawler-distribution]
    steps:

# Build Windows Installer - SETUP BUILD ENVIRONMENT
    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v4
    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17

# Build Windows Installer - BUILD INSTALLER
    - id: download-distrib-lib
      name: Download distribution
      uses: actions/download-artifact@v4
    - id: build-installer
      name: Build installer
      shell: bash
      run: |
        # Build installer
        mkdir ./schemacrawler-installers
        jpackage --verbose "@jpackage.cfg" "@jpackage-windows.cfg"
        sha256sum -b \
          ./schemacrawler-installers/SchemaCrawler-16.26.2.msi \
          > ./schemacrawler-installers/SchemaCrawler-16.26.2.msi.SHA256
        ls -l ./schemacrawler-installers

# Build Windows Installer - SAVE INSTALLER
    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        name: windows-installer
        path: ./schemacrawler-installers/*
        retention-days: 1


### CREATE RELEASE
  create-release:
    name: Create Release
    runs-on: windows-latest
    needs: [build-linux-installer, build-windows-installer]
    steps:

# Checkout code
    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v4

# Create Release - DOWNLOAD INSTALLERS
    - id: download-linux-installer
      name: Download Linux installer
      uses: actions/download-artifact@v4
      with:
        name: linux-installer
    - id: download-windows-installer
      name: Download Windows installer
      uses: actions/download-artifact@v4
      with:
        name: windows-installer
    - id: download-distribution
      name: Download distribution
      shell: pwsh
      run: |
        # Download binary distribution
        Invoke-WebRequest -OutFile schemacrawler-16.26.2-bin.zip -Uri  https://github.com/schemacrawler/SchemaCrawler/releases/download/v16.26.2/schemacrawler-16.26.2-bin.zip

# Release and Publish with JReleaser
    - id: jreleaser
      name: Run JReleaser
      uses: jreleaser/release-action@v2
      env:
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        JRELEASER_CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}
        JRELEASER_CHOCOLATEY_GITHUB_TOKEN: ${{ secrets.CHOCOLATEY_GITHUB_TOKEN }}
        JRELEASER_SDKMAN_CONSUMER_KEY: ${{ secrets.SDKMAN_CONSUMER_KEY }}
        JRELEASER_SDKMAN_CONSUMER_TOKEN: ${{ secrets.SDKMAN_CONSUMER_TOKEN }}
      with:
        version: early-access
        arguments: "full-release -g"
    - id: persist-jreleaser-out
      name: JReleaser release output
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: windows-jreleaser-out
        path: |
          out/jreleaser/trace.log
          out/jreleaser/output.properties
        retention-days: 5
